import '../generator.dart';
import '../shrinker/tuple.dart';

/// Creates a generator that produces tuples by combining the results of the provided element generators.
/// The resulting tuple's type is derived from the types generated by the input generators.
///
/// [elemGens] A list of `Generator` instances.
/// Returns a `Generator` that produces tuples where each element corresponds to the value generated by the respective generator in `elemGens`.
Generator<List<T>> tupleGen<T>(List<Generator<T>> elemGens) {
  return Arbitrary<List<T>>((rand) {
    final shrinkables =
        elemGens.map((elemGen) => elemGen.generate(rand)).toList();
    // The resulting Shrinkable tuple combines the individual shrinkable values.
    return shrinkableTuple(shrinkables);
  });
}
